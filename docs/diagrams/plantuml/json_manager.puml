@startuml JSONManager
!theme blueprint

abstract class JSONManager {
    - JSONInterface json_interface
    - MappingInterface map_interface
    - Path file_path
    + JSONManager(file_path: str, initial_data: Optional[dict[str, Any]])
    + Dict[str, Any] load()
    + None save()
    + None backup()
}

class ConfigurationManager extends JSONManager {
    - JSONInterface json_interface
    - MappingInterface map_interface
    - Path file_path
    + ConfigurationManager(file_path: str, initial_data: Optional[dict[str, Any]])
  ...  // other specific methods related to ConfigurationManager
}

class ChatSession {
    - context_window: ContextWindowManager
    - transcript: TranscriptManager
    - token_manager: ChatSessionTokenManager
    - model: ChatModel
    + ChatSession(provider: str, config: ConfigurationManager, model: ChatModel)
    + send_message(message: ChatModelChatCompletion): ChatModelChatCompletion
    + get_transcript(): List[ChatModelChatCompletion]
    + clear_session()
}

ChatSession --> ChatModelChatCompletion : uses
ChatSession --> ChatModel : uses
ChatSession --> ContextWindowManager : uses
ChatSession --> TranscriptManager : uses
ChatSession --> ChatSessionTokenManager : uses

@enduml