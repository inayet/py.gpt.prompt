@startuml ChatModel
!theme blueprint

' docs/diagrams/plantuml/chat_model.puml

abstract class JSONManager {
    - JSONInterface json_interface
    - MappingInterface map_interface
    + JSONManager(file_path: str, initial_data: Optional[dict[str, Any]])
}

class ChatCompletionMessage {
    + role: Literal["assistant", "user", "system"]
    + content: str
    + user: NotRequired[str]
}

class ChatModelChatCompletion extends ChatCompletionMessage {
    + role: Literal["assistant", "user", "system", "function"]
    + content: NotRequired[str]
    + function_call: NotRequired[str]
    + function_args: NotRequired[str]
    + user: NotRequired[str]
}

abstract class ChatModel {
    - config: JSONManager
    + ChatModel(config: MappingTemplate)
    + get_completion(prompt: str): str ' ChatModelCompletion
    + get_chat_completion(messages: List[ChatModelChatCompletion]): ChatModelChatCompletion
    + get_embedding(input: Union[str, List[str]]): List[List[float]] ' ChatModelEmbedding
    + get_encoding(text: str): List[int] ' ChatModelEncoding
}

ChatModel::config o--> JSONManager : <<ConfigurationManager>>
ChatModel --> ChatModelChatCompletion : uses

@enduml