@startuml MappingTemplates
!theme blueprint

class JSONTemplate {
    - Path _file_path
    - List[Callable] _callbacks
    + JSONTemplate(file_path: Union[str, Path])
    # Path file_path
    + None register(callback: Callable)
    + bool load_json()
    + bool save_json()
    + bool backup_json()
    + bool make_directory()
}

class ListTemplate {
    - Optional[List[Dict[str, Any]]] _data
    + ListTemplate(initial_data: Optional[List[Dict[str, Any]]])
    # int length
    # Optional[List[Dict[str, Any]]] data
    + None observe(self, data: List[Dict[str, Any]])
    + None append(item: Dict[str, Any])
    + bool insert(index: int, item: Dict[str, Any])
    + Optional[Dict[str, Any]] get(index: int)
    + bool update(index: int, item: Dict[str, Any])
    + bool remove(index: int)
    + None clear()
}

class MappingTemplate {
    - Dict _data
    + MappingTemplate(initial_data: Optional[Dict[str, Any]])
    # List[str] keys
    # Dict[str, Any] data
    + None observe(self, data: Dict[str, Any])
    + bool create(key: str, value: Any)
    + bool create_nested(value: Any, *keys: str)
    + Any read(key: str)
    + Any read_nested(*keys: str)
    + bool update(key: str, value: Any)
    + bool update_nested(value: Any, *keys: str)
    + bool delete(key: str)
    + bool delete_nested(*keys: str)
}

class ConfigurationManager
JSONTemplate <|-- ConfigurationManager
MappingTemplate <|.. ConfigurationManager

class ContextWindowManager
JSONTemplate <|-- ContextWindowManager
ListTemplate <|.. ContextWindowManager

class TranscriptManager
JSONTemplate <|-- TranscriptManager
ListTemplate <|.. TranscriptManager
@enduml
