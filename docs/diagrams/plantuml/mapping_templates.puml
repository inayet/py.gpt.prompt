@startuml MappingTemplates
!theme blueprint

class JSONTemplate {
    // JSONMap = Dict[str, Any]
    // JSONList = List[JSONMap]
    // JSONData = Union[JSONMap, JSONList]
    + JSONTemplate(file_path: str, initial_data: Optional[JSONData])
    - Path _file_path
    # Path file_path
    - JSONData _data
    # JSONData data
    + bool load_json()
    + bool save_json(data: JSONData)
    + bool backup_json()
    + bool make_directory()
}

class MappingTemplate extends JSONTemplate {
    // JSONMap = Dict[str, Any]
    + MappingTemplate(file_path: str, initial_data: Optional[JSONMap])
    # List[str] keys
    + bool create(key: str, value: Any)
    + bool create_nested(value: Any, *keys: str)
    + Any read(key: str)
    + Any read_nested(*keys: str)
    + bool update(key: str, value: Any)
    + bool update_nested(value: Any, *keys: str)
    + bool delete(key: str)
    + bool delete_nested(*keys: str)
}

class ListTemplate extends JSONTemplate {
    // JSONMap = Dict[str, Any]
    // JSONList = List[JSONMap]
    + ListTemplate(file_path: str, initial_data: Optional[JSONList])
    # int length
    + None append(item: JSONMap)
    + bool insert(index: int, item: JSONMap)
    + Optional[JSONMap] get(index: int)
    + bool update(index: int, item: JSONMap)
    + bool remove(index: int)
    + Optional[JSONMap] pop(index: int)
    + None clear()
}

class ConfigurationManager
MappingTemplate <|.. ConfigurationManager

class ContextWindowManager
ListTemplate <|.. ContextWindowManager

class TranscriptManager
ListTemplate <|.. TranscriptManager
@enduml
